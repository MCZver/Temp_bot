void TG_init(void) {                    // a variable to store telegram message data
  TBMessage msg;

  // if there is an incoming message...
  if (myBot.getNewMessage(msg)) {
    if (msg.text == "/start") {
      myBot.sendMessage(msg, "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ–ª–µ–≥—Ä–∞–º–º-–≥—Ä–∞–¥—É—Å–Ω–∏–∫ üòä");
      myBot.sendMessage(msg, "–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –ø–æ–ø—Ä–æ—Å–∏ –º–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–±—è –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π");
      myBot.sendMessage(msg, "https://t.me/zver_ukraina");
    }
    /*
       204985716 - –ù–∞–¥—è
       242446150 - –ú–∞–∫—Å
    */
    if (msg.sender.id == 204985716 || msg.sender.id == 242446150) {
      if (msg.text == "/home") {

        String home_temp_str = "";
        home_temp_str += "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–æ–º–∞: ";
        home_temp_str += temp2;
        myBot.sendMessage(msg, home_temp_str);

        //        if (curent_temp1_int < 19) myBot.sendMessage(msg, "–£—Ñ... —á—Ç–æ-—Ç–æ —Ö–æ–ª–æ–¥–Ω–æ–≤–∞—Ç–æ :(");
        //        if (curent_temp1_int > 19 && curent_temp1_int < 25) myBot.sendMessage(msg, "–ö–æ–º—Ñ–æ—Ä—Ç–Ω–æ! –ú–æ–∂–Ω–æ –∂–∏—Ç—å :)");
        //        if (curent_temp1_int > 25 && curent_temp1_int < 30) myBot.sendMessage(msg, "–¢–µ–ø–ª–µ–Ω—å–∫–æ! :)");
        //        if (curent_temp1_int > 30) myBot.sendMessage(msg, "–ñ–∞—Ä–∫–æ–≤–∞—Ç–æ! –ö–∞–∂–µ—Ç—Å—è –ø–æ—Ä–∞ –¥–æ—Å—Ç–∞–≤–∞—Ç—å –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä!");
      }

      if (msg.text == "/street") {
        String street_temp_str = "";
        street_temp_str += "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ —É–ª–∏—Ü–µ: ";
        street_temp_str += temp1;
        myBot.sendMessage(msg, street_temp_str);

        //        if (curent_temp1_int < 19) myBot.sendMessage(msg, "–£—Ñ... —á—Ç–æ-—Ç–æ —Ö–æ–ª–æ–¥–Ω–æ–≤–∞—Ç–æ :(");
        //        if (curent_temp1_int > 19 && curent_temp1_int < 25) myBot.sendMessage(msg, "–ú–æ–∂–Ω–æ –∂–∏—Ç—å :)");
        //        if (curent_temp1_int > 25 && curent_temp1_int < 30) myBot.sendMessage(msg, "–¢–µ–ø–ª–µ–Ω—å–∫–æ! –ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –º–æ—Ä–æ–∂–µ–Ω–∫—É!");
        //        if (curent_temp1_int > 30) myBot.sendMessage(msg, "–ñ–∞—Ä–∫–æ–≤–∞—Ç–æ! –ö–∞–∂–µ—Ç—Å—è –Ω–∞ –∞—Å—Ñ–∞–ª—å—Ç–µ –º–æ–∂–Ω–æ –∂–∞—Ä–∏—Ç—å —è–∏—à–µ–Ω–∫—É...");
      }

      if (msg.text == "/uptime") {
        myBot.sendMessage(msg, "–Ø —Ä–∞–±–æ—Ç–∞—é –±–µ—Å–ø—Ä–µ—Ä—ã–≤–Ω–æ —É–∂–µ...");

        String uptime_str = "";

        uptime_str += uptime::getDays();
        uptime_str += " –¥–Ω–µ–π,    ";
        uptime_str += uptime::getHours();
        uptime_str += " —á–∞—Å–æ–≤,   ";
        uptime_str += uptime::getMinutes();
        uptime_str += " –º–∏–Ω—É—Ç,   ";
        uptime_str += uptime::getSeconds();
        uptime_str += " —Å–µ–∫—É–Ω–¥.";

        myBot.sendMessage(msg, uptime_str);
      }

      if (msg.text == "/click") {
        myBot.sendMessage(msg, "–ö–ª–∏–∫–Ω—É–ª) –°–º–æ—Ç—Ä–∏...");
        digitalWrite(1, HIGH);
        delay(100);
        digitalWrite(1, LOW);
      }

//      if (msg.text == "/udp") {
//        myBot.sendMessage(msg, "UDP Send test");
//        
//        IPAddress ip = WiFi.localIP();
//        String str_ip_adres = IpAddress2String(ip);
//        int str_len = str_ip_adres.length() + 1;
//        char char_ip[str_len];
//        str_ip_adres.toCharArray(char_ip, str_len);
//
//        udp.beginPacket(SendIP, 2000);
//        udp.write(char_ip, 20);
//        udp.endPacket();
//      }
    }
  }
}

void Sensor_data(void) {
  static uint32_t tmr;
  if (millis() - tmr >= 800) {
    tmr = millis();

    if (sensor1.readTemp()) {
      temp1  = String(sensor1.getTemp(), 2);
      curent_temp1_int = sensor1.getTempInt();
    }
    if (sensor2.readTemp()) {
      temp2  = String(sensor2.getTemp(), 2);
      curent_temp2_int = sensor2.getTempInt();
    }

    sensor1.requestTemp();
    sensor2.requestTemp();
  }
}
